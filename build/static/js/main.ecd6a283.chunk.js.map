{"version":3,"sources":["Components/Calculator/Calculator.js","Components/Buttons/Buttons.js","Components/FormulaScrn/FormulaScrn.js","Components/Value/Value.js","Components/Display/Display.js","logo.svg","App.js","serviceWorker.js","index.js"],"names":["Calculator","ceRegex","RegExp","evalRegex","signRegex","warn","err","maxChars","useState","value","setValue","prevValue","setPrevValue","formula","setFormula","sign","setSign","last","setLast","output","setOutput","outputSize","setOutputSize","reset","handleNumbers","e","newValue","target","includes","val","length","handleMax","replace","parseFloat","toLocaleString","getFontSize","toString","handleSign","slice","concat","handleOperator","operator","handleEval","f","result","Math","round","eval","fontSize","toExponential","setTimeout","handleClear","newFormula","handleDecimal","console","log","useEffect","str","className","handleNum","handleOp","handleClr","handleDec","href","Buttons","onMouseDown","onClick","FormulaScrn","Value","style","Display","module","exports","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ecd6a283.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Display from \"../Display/Display\";\r\nimport Buttons from \"../Buttons/Buttons\";\r\n\r\nconst Calculator = () => {\r\n  const ceRegex = new RegExp(/\\d*\\.?\\d*$|(\\d*\\.?\\d*[\\+\\*\\/-])$|\\(\\S*\\)$/),\r\n    evalRegex = new RegExp(/[+*\\/\\-\\.]+$/),\r\n    signRegex = new RegExp(/(\\(*\\-\\d*\\.*\\d*\\)*)$/),\r\n    warn = \"MAX CHAR LIMIT\",\r\n    err = \"ERROR\",\r\n    maxChars = 17,\r\n    [value, setValue] = useState(\"\"),\r\n    [prevValue, setPrevValue] = useState(\"0\"),\r\n    [formula, setFormula] = useState(\"\"),\r\n    [sign, setSign] = useState(\"+\"),\r\n    [last, setLast] = useState(\"\"),\r\n    [output, setOutput] = useState(\"\"),\r\n    [outputSize, setOutputSize] = useState(3.2);\r\n\r\n  const reset = () => {\r\n    setPrevValue(\"0\");\r\n    setValue(\"\");\r\n    setFormula(\"\");\r\n    setOutput(\"\");\r\n    setLast(\"AC\");\r\n    setSign(\"+\");\r\n  };\r\n\r\n  const handleNumbers = (e) => {\r\n    const newValue = e.target.value;\r\n    if (last === \"eval\") {\r\n      setValue(newValue);\r\n      setFormula(newValue);\r\n      setOutput(newValue);\r\n    } else if (!value.includes(\"MAX\")) {\r\n      var val = value;\r\n      if (value.length >= maxChars) {\r\n        handleMax();\r\n        setLast(\"num\");\r\n        return;\r\n      } else if (last === \"sign\" && sign === \"-\") {\r\n        val += newValue;\r\n        setFormula(formula.replace(signRegex, val));\r\n      } else if (value.length < maxChars) {\r\n        val = last === \"op\" ? newValue : value + newValue;\r\n        setFormula(formula + newValue);\r\n      }\r\n      setPrevValue(value);\r\n      setValue(val);\r\n      setOutput(parseFloat(val).toLocaleString());\r\n      setOutputSize(getFontSize(val.toString()));\r\n    }\r\n    setLast(\"num\");\r\n  };\r\n\r\n  const handleSign = (e) => {\r\n    if (last !== \"eval\" && last !== \"op\") {\r\n      if (sign === \"+\") {\r\n        setFormula(\r\n          formula\r\n            .slice(0, formula.length - value.toString().length)\r\n            .concat(\"(-\" + value + \")\")\r\n        );\r\n        setOutput(\r\n          value !== \"\" ? \"-\" + parseFloat(value).toLocaleString() : \"-\"\r\n        );\r\n        setValue(\"-\" + value);\r\n        setSign(\"-\");\r\n      } else {\r\n        let newValue = value.slice(1);\r\n        setFormula(formula.replace(signRegex, newValue));\r\n        setOutput(parseFloat(newValue).toLocaleString());\r\n        setValue(newValue);\r\n        setSign(\"+\");\r\n      }\r\n      setLast(\"sign\");\r\n    }\r\n  };\r\n\r\n  const handleOperator = (e) => {\r\n    const operator = e.target.value.replace(\"x\", \"*\");\r\n    if (last !== \"op\" && value !== \"\" && value !== \"-\") {\r\n      setFormula(formula.replace(\"=\", \"\") + operator);\r\n      setOutput(operator);\r\n      setValue(operator);\r\n      setPrevValue(value);\r\n      setLast(\"op\");\r\n      setSign(\"+\");\r\n    }\r\n  };\r\n\r\n  const handleEval = (e) => {\r\n    if (last !== \"eval\") {\r\n      try {\r\n        const f = formula.replace(evalRegex, \"\"),\r\n          result = Math.round(100000000000 * eval(f)) / 100000000000,\r\n          fontSize = getFontSize(result.toString()); // need to rescan if exponent, use if to replace ternary, or use auto-scaling text idea\r\n        setOutput(\r\n          result.toString().length > maxChars\r\n            ? parseFloat(result).toExponential(2)\r\n            : parseFloat(result).toLocaleString()\r\n        );\r\n        setFormula(f + e.target.value);\r\n        setValue(result);\r\n        setPrevValue(value);\r\n        setOutputSize(fontSize);\r\n      } catch (e) {\r\n        setFormula(\"\");\r\n        setOutput(err);\r\n        setValue(err);\r\n        setTimeout(reset(), 2000);\r\n      }\r\n      setLast(\"eval\");\r\n    }\r\n  };\r\n\r\n  const handleClear = (e) => {\r\n    if (e.target.value === \"AC\") {\r\n      reset();\r\n    } else {\r\n      const newFormula = formula.replace(ceRegex, \"\").replace(\"=\", \"\"); // refactor into a sep let\r\n      setValue(\"\");\r\n      setOutput(\"\");\r\n      setFormula(newFormula);\r\n      setLast(\"ce\");\r\n    }\r\n  };\r\n\r\n  const handleDecimal = (e) => {\r\n    if (last !== \"dec\" && !value.includes(\".\")) {\r\n      if (value === \"\" || last === \"op\") {\r\n        setValue(\"0.\");\r\n        setOutput(\"0.\");\r\n        setFormula(formula + \"0.\");\r\n      } else {\r\n        setOutput(parseFloat(value).toLocaleString() + \".\");\r\n        setFormula(formula + \".\");\r\n        setValue(value + \".\");\r\n      }\r\n      setLast(\"dec\");\r\n    }\r\n  };\r\n\r\n  const handleMax = () => {\r\n    console.log(`value: ${value}, output: ${output} `);\r\n    setPrevValue(value);\r\n    setValue(warn);\r\n    setOutput(warn);\r\n  \r\n    setTimeout(() => {\r\n      setOutput(parseFloat(prevValue).toLocaleString());\r\n      setValue(prevValue);\r\n      console.log(\"timeout\");\r\n    }, 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(`output ${output}`);\r\n  }, [output]);\r\n\r\n  const getFontSize = (str) => {\r\n    switch (true) {\r\n      case str.length > maxChars:\r\n        return 1.55;\r\n\r\n      case str.length === 9:\r\n        return 3.1;\r\n\r\n      case str.length === 10:\r\n        return 2.75;\r\n\r\n      case str.length === 11:\r\n        return 2.5;\r\n\r\n      case str.length === 12:\r\n        return 2.35;\r\n\r\n      case str.length === 13:\r\n        return 2.15;\r\n\r\n      case str.length === 14:\r\n        return 2.05;\r\n\r\n      case str.length === 15:\r\n        return 1.9;\r\n\r\n      case str.length === 16:\r\n        return 1.7;\r\n\r\n      case str.length === 17:\r\n        return 1.6;\r\n\r\n      default:\r\n        return 3.2;\r\n    }\r\n  };\r\n\r\n  //useEffect(() => {\r\n  //console.log(\"output \" + output);\r\n  //var screenWidth = document.querySelector('.output').width;\r\n  //var textWidth;\r\n  //}, [output]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"calculator\">\r\n        <h1 className=\"title\">Talculator</h1>\r\n        <Display outputSize={outputSize} formula={formula} output={output} />\r\n        <Buttons\r\n          handleNum={handleNumbers}\r\n          handleSign={handleSign}\r\n          handleOp={handleOperator}\r\n          handleEval={handleEval}\r\n          handleClr={handleClear}\r\n          handleDec={handleDecimal}\r\n        />\r\n        <div className=\"author\">\r\n          <a href=\"https://johndarke.net\">JohnDarke.net</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import React from \"react\";\r\n\r\nconst Buttons = ({handleNum, handleSign, handleOp, handleEval, handleClr, handleDec}) => {\r\n  return (\r\n    <div className=\"buttons\">\r\n        <button value=\"AC\" className=\"clear\" onMouseDown={handleClr}>AC</button>\r\n        <button value=\"CE\" className=\"clear\" onClick={handleClr}>CE</button>\r\n        <button value=\"±\" className=\"operator\" onClick={handleSign}>±</button>\r\n        <button value=\"/\" className=\"operator\" onClick={handleOp}>/</button>\r\n        <button value=\"7\" className=\"number\" onClick={handleNum}>7</button>\r\n        <button value=\"8\" className=\"number\" onClick={handleNum}>8</button>\r\n        <button value=\"9\" className=\"number\" onClick={handleNum}>9</button>\r\n        <button value=\"x\" className=\"operator\" onClick={handleOp}>x</button>\r\n        <button value=\"4\" className=\"number\" onClick={handleNum}>4</button>\r\n        <button value=\"5\" className=\"number\" onClick={handleNum}>5</button>\r\n        <button value=\"6\" className=\"number\" onClick={handleNum}>6</button>\r\n        <button value=\"-\" className=\"operator\" onClick={handleOp}>-</button>\r\n        <button value=\"1\" className=\"number\" onClick={handleNum}>1</button>\r\n        <button value=\"2\" className=\"number\" onClick={handleNum}>2</button>\r\n        <button value=\"3\" className=\"number\" onClick={handleNum}>3</button>\r\n        <button value=\"+\" className=\"operator\" onClick={handleOp}>+</button>\r\n        <button value=\"0\" className=\"number wide\" onClick={handleNum}>0</button>\r\n        <button value=\".\" className=\"number\" onClick={handleDec}>.</button>\r\n        <button value=\"=\" className=\"operator eval\" onClick={handleEval}>=</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React from \"react\";\r\n\r\nconst FormulaScrn = ({formula}) => {\r\n  return (\r\n    <div className=\"formula\">{formula}</div>\r\n  );\r\n};\r\n\r\nexport default FormulaScrn;\r\n","import React from \"react\";\r\n\r\nconst Value = ({outputSize, output}) => {\r\n  const style = {fontSize: `${outputSize}em`};\r\n  return (\r\n    <div className=\"output\" style={style}>{output}</div>\r\n  );\r\n};\r\n\r\nexport default Value;\r\n","import React from \"react\";\r\nimport FormulaScrn from \"../FormulaScrn/FormulaScrn\";\r\nimport Value from \"../Value/Value\";\r\n\r\nconst Display = ({ outputSize, formula, output }) => {\r\n  return (\r\n    <div className=\"display\">\r\n      <FormulaScrn formula={formula} />\r\n      <Value output={output} outputSize={outputSize}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Calculator from './Components/Calculator/Calculator';\n\nconst App = () => {\n  return (\n     <Calculator />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}